# ---------------- Lab 1 ----------------
print(sum(all(i%j for j in range(2,i)) for i in range(10,51)))
print([i for i in range(100) if all(i%j for j in range(2,i)) and all(d in "2357" for d in str(i))])
import math;print(math.gcd(123456,7890))
print([i for i in range(10,100) if all(i%j for j in range(2,i)) and all(int(str(i)[::-1])%j for j in range(2,int(str(i)[::-1])))])
print("Coprime" if math.gcd(35,64)==1 else "Not Coprime")

# ---------------- Lab 2 ----------------
scores=[85,35,92,75,75];grades=['A' if s>=90 else 'B' if s>=75 else 'F' for s in scores]
print({g:grades.count(g) for g in set(grades)})
students={'Alice':85,'Bob':35,'Charlie':92}
for n,s in students.items():print(n,('A' if s>=90 else 'B' if s>=75 else 'F'))
for n,s in students.items():print(n,"Pass" if s>=40 else "Fail")
avg=sum(students.values())/len(students);print({n:s for n,s in students.items() if s>avg})
from statistics import mode;print(mode(scores))

# ---------------- Lab 3 ----------------
import numpy as np,matplotlib.pyplot as plt
from PIL import Image,ImageFilter
try:
    img=np.array(Image.open('my_image.jpg').convert('L'))
    plt.imshow(np.where(np.rot90(img,-1)>128,255,0),cmap='gray');plt.show()
    plt.imshow(Image.open('my_image.jpg').filter(ImageFilter.BoxBlur(5)));plt.show()
    img=np.array(Image.open('my_image.jpg'))
    plt.imshow(np.clip(img+50,0,255));plt.show()
except:print("Image missing")

# ---------------- Lab 4 ----------------
import numpy as np
print(np.linalg.solve([[5,2],[3,2]],[3,5]))
print(np.linalg.solve([[2,3,3],[1,-2,1],[3,-1,-2]],[5,-4,3]))
a,b,c=np.linalg.solve([[1,1,1],[4,2,1],[9,3,1]],[10,22,38]);print(a*25+b*5+c)
a,b,c=np.linalg.solve([[100,10,1],[400,20,1],[900,30,1]],[8,16,18]);print("CSK Won!" if a*75**2+b*75+c>6 else "CSK Lost!")

# ---------------- Lab 5 ----------------
from scipy import stats;import numpy as np
print(stats.ttest_1samp([2480,2525,2490,2455,2510,2470],2500).pvalue)
print(stats.t.sf(abs((58.7-60)/(1.8/np.sqrt(25))),24)*2)
from scipy.stats import chisquare;print(chisquare([28,24,30,18]).pvalue)

# ---------------- Lab 6 ----------------
import pandas as pd;from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
df=pd.read_csv('student_data.csv')
X,y=df[['Hours_Studied','Previous_Scores','Assignment_Completion']],df['Passed']
Xtr,Xte,ytr,yte=train_test_split(X,y,test_size=.3,random_state=42)
m=LogisticRegression().fit(Xtr,ytr);print(m.coef_)
import numpy as np,matplotlib.pyplot as plt
X=df[['Hours_Studied','Previous_Scores']];m=LogisticRegression().fit(X,y)
xx,yy=np.meshgrid(np.arange(X.min()[0]-1,X.max()[0]+1,.02),np.arange(X.min()[1]-1,X.max()[1]+1,.02))
plt.contourf(xx,yy,m.predict(np.c_[xx.ravel(),yy.ravel()]).reshape(xx.shape),alpha=.8)
plt.scatter(X.iloc[:,0],X.iloc[:,1],c=y,edgecolors='k');plt.show()
from sklearn.metrics import precision_score,recall_score,f1_score
yp=m.predict(Xte);print(precision_score(yte,yp),recall_score(yte,yp),f1_score(yte,yp))

# ---------------- Lab 7 ----------------
df=pd.read_csv('sales_data.csv');print(df.head())
print(df[(df.Region=="South")&(df.Product=="Laptop")])
print(df.groupby("Salesperson")["Total Sales"].sum())
print(df['Date'].dtype);df['Date']=pd.to_datetime(df['Date']);print(df['Date'].dtype)
print(df.groupby("Product")[['Units Sold','Total Sales']].sum())

# ---------------- Lab 8 ----------------
df=pd.read_csv('stock_prices.csv');df['Date']=pd.to_datetime(df['Date'])
plt.plot(df[df.Company=="Apple"].Date,df[df.Company=="Apple"].Close);plt.show()
df=pd.read_csv('weather_data.csv');df['Date']=pd.to_datetime(df['Date'])
plt.plot(df[df.City=="Delhi"].Date.dt.month,df[df.City=="Delhi"].Temperature,'o-');plt.show()
df=pd.read_csv('energy_consumption.csv');df['Timestamp']=pd.to_datetime(df['Timestamp'])
plt.plot(df.Timestamp,df.Energy_Consumed.rolling(7).mean());plt.show()
df=pd.read_csv('air_quality.csv');df['Date']=pd.to_datetime(df['Date'])
plt.plot(df.Date,df['PM2.5']);plt.axhline(100,color='r');plt.show()
df=pd.read_csv('web_traffic.csv');df['Date']=pd.to_datetime(df['Date'])
plt.plot(df.Date,df.Page_Views);plt.plot(df.Date,df.Page_Views.rolling(7).mean());plt.show()

# ---------------- Lab 9 ----------------
import pandas as pd,matplotlib.pyplot as plt
from sklearn.cluster import KMeans;from sklearn.preprocessing import StandardScaler
d2={'Age':[19,21,20,23,31,35,40,52,58,63],'Income':[15000,18000,17000,22000,35000,40000,45000,60000,65000,70000]}
df2=pd.DataFrame(d2);plt.plot(range(1,8),[KMeans(k,n_init='auto').fit(df2).inertia_ for k in range(1,8)]);plt.show()
df2['c']=KMeans(3,n_init='auto').fit_predict(df2);plt.scatter(df2.Age,df2.Income,c=df2.c);plt.show()
d3={'Age':[19,21,20,23,31,35,40,52,58,63],'Income':[15000,18000,17000,22000,35000,40000,45000,60000,65000,70000],'Spend':[39,81,6,77,40,50,60,30,20,70]}
Xs=StandardScaler().fit_transform(pd.DataFrame(d3))
plt.plot(range(1,8),[KMeans(k,n_init='auto').fit(Xs).inertia_ for k in range(1,8)]);plt.show()
df3=pd.DataFrame(d3);df3['c']=KMeans(3,n_init='auto').fit_predict(Xs)
from mpl_toolkits.mplot3d import Axes3D;ax=plt.figure().add_subplot(projection='3d')
ax.scatter(df3.Age,df3.Income,df3.Spend,c=df3.c);plt.show()

# ---------------- Lab 10 ----------------
import seaborn as sns,matplotlib.pyplot as plt
tips=sns.load_dataset("tips");sns.histplot(tips.total_bill,kde=True);plt.show()
sns.boxplot(tips.day,tips.total_bill);plt.show()
sns.lmplot(x="total_bill",y="tip",data=tips);plt.show()
iris=sns.load_dataset("iris").drop(columns="species");sns.heatmap(iris.corr(),annot=True);plt.show()
titanic=sns.load_dataset("titanic");sns.countplot(titanic.pclass,hue=titanic.survived);plt.show()
